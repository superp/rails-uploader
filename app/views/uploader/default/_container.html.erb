<%= content_tag(:div, :id => field.id, :class => "uploader-dnd-area") do -%>
  <%= hidden_field(field.object_name, :fileupload_guid, :object => field.object) if field.object.new_record? %>
  
  <div class="uploader-files"></div>
  
	<div class="uploader-dnd-hints">  
	  <button class="uploader-button gray fileinput-button">
      <span><%= I18n.t('uploader.button') %></span>
      <%= fields_for field.object do |f| -%>
	      <%= f.fields_for field.method_name, field.klass.new do |m| -%>
          <%= m.file_field(:data, field.input_html) %>
	      <% end -%>
	    <% end -%>
    </button>
    
	  <div class="uploader-dnd-hint">
		  <%= I18n.t('uploader.or') %><span><%= I18n.t('uploader.drop') %></span>
	  </div>
	</div>
	
	<%= render :partial => "uploader/#{field.theme}/init", :locals => {:field => field} %>
	<%= render :partial => "uploader/#{field.theme}/upload", :locals => {:field => field} %>
  <%= render :partial => "uploader/#{field.theme}/download", :locals => {:field => field} %>
  
	<script type="text/javascript">
    $(function() {
      var container = $("#<%= field.id %> div.uploader-files");
      
      $('#<%= field.id %> input[type="file"]').bind("init.uploader", function(e){
        $(this).fileupload({
          dataType: 'json',
          dropZone: $("#<%= field.id %>"),
          autoUpload: true,
          paramName: "asset[data]",
          formData: function(form){ return []; },
          filesContainer: container,
          namespace: 'uploader',
          uploadTemplateId: 'template-upload-<%= field.klass %>',
          downloadTemplateId: 'template-download-<%= field.klass %>'
        });

        <% if field.confirm_delete -%>
          var fu = $(this).data("fileupload")
          fu.options._oldDestroy = fu.options.destroy

          fu.options.destroy = function(e, data) {
            if (confirm("<%= field.confirm_message.gsub('"', '\\"') %>")) {
              fu.options._oldDestroy.call(this, e, data);
            }
          };
        <% end -%>
        
        <% if field.exists? -%>
          $(this).data("fileupload")
            ._renderDownload(<%=raw field.values.to_json(:root => false) %>)
            .appendTo(container);
        <% end -%>
      });
    });
  </script>
<% end -%>
